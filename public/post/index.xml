<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog | Hugo Academic CV Theme</title>
    <link>http://localhost:1313/post/</link>
      <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Blog</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Fri, 30 May 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu_645fa481986063ef.png</url>
      <title>Blog</title>
      <link>http://localhost:1313/post/</link>
    </image>
    
    <item>
      <title>My fifth blog</title>
      <link>http://localhost:1313/post/5blog/</link>
      <pubDate>Fri, 30 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/5blog/</guid>
      <description>&lt;p&gt;During last week, I completed lab. No.14 and the 6th step of personal project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My fourth blog</title>
      <link>http://localhost:1313/post/4blog/</link>
      <pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/4blog/</guid>
      <description>&lt;p&gt;During my last week, I completed lab No.13 and checked the lab work of other students.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My third blog</title>
      <link>http://localhost:1313/post/3blog/</link>
      <pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/3blog/</guid>
      <description>&lt;p&gt;During this week, I completed lab No.11 and the forth step of individual project. Also, I&amp;rsquo;ve checked the lab work of other students.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating a report</title>
      <link>http://localhost:1313/post/3post/</link>
      <pubDate>Wed, 16 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/3post/</guid>
      <description>&lt;p&gt;Laboratory work is a small scientific research work, which should be executed according to all approved requirements. When preparing a lab report, you will master a number of important elements that will be useful to you in the future when writing term papers and theses.&lt;/p&gt;
&lt;p&gt;The structure of the report According to GOST 7.32-2001, any scientific research work must necessarily contain the following elements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The title page&lt;/li&gt;
&lt;li&gt;report&lt;/li&gt;
&lt;li&gt;introduction&lt;/li&gt;
&lt;li&gt;the main part&lt;/li&gt;
&lt;li&gt;conclusion&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GOST also recommends that the following elements be included in the work::&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;list of performers
content
regulatory references
definitions
designations and abbreviations
list of used application sources
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are carrying out complex work performed in several stages, then you may need to include some or all of the elements of the second list in the work.&lt;/p&gt;
&lt;p&gt;The content of the main elements of the report:&lt;/p&gt;
&lt;p&gt;The title page. The first sheet of work is drawn up strictly according to the pattern that is usually given in the manuals on your subject. It not only requires specifying elements such as the name of the educational institution, type of work, and information about the performer, but also arranging them in strict accordance with the standards.&lt;/p&gt;
&lt;p&gt;Report. The abstract is actually a summary of your entire report and contains a number of statistical information. It should specify the number of parts, pages of the work, illustrations, appendices, tables, used literary sources and appendices. The list of keywords of the paper and the actual text of the abstract are also provided here. The latter implies the main elements of the work, from the goals set to the results and recommendations for their implementation. In the practice of universities, an abstract is usually not included in laboratory reports.&lt;/p&gt;
&lt;p&gt;Introduction. In the introduction of a typical laboratory work, the goals of the research and the tasks that will help achieve the goals are usually prescribed. At the same time, there are works in which students become real pioneers. Have you ever felt a sense of extreme curiosity and impatience when doing laboratory work? Do you feel that in just a couple of minutes you will find the answer to a question that no one has ever found an answer to? It is for such studies that a detailed introduction is written to prove the relevance and novelty of the topic being studied. In order to really conduct research in an area in which, as they say, no human has ever set foot, in the introduction you will need to provide an assessment of the current state of the problem under consideration and justify the need to solve it.&lt;/p&gt;
&lt;p&gt;The main part. Since different universities and disciplines have their own subtleties of conducting laboratory work, the content of the main part is described in detail in the relevant manuals. It is important that this section of the work reflects its essence, describes the methodology and results of the work done.&lt;/p&gt;
&lt;p&gt;The main part prescribes the following elements:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;objectives of the study;
tasks that will help you achieve your goals;
the progress of the work, which describes the actions performed;
other sections provided by the methodological materials on the discipline under study.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Conclusion. In this part of the work, you will need to draw conclusions from the results obtained during the laboratory work. To do this, evaluate how fully the tasks have been completed. Other elements may be present in complex work, for example, recommendations for further application of the results of the work performed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scientific programming languages</title>
      <link>http://localhost:1313/post/4post/</link>
      <pubDate>Wed, 16 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/4post/</guid>
      <description>&lt;p&gt;In computer programming, a scientific programming language can refer to two degrees of the same concept.&lt;/p&gt;
&lt;p&gt;In a broad sense, a scientific programming language is a programming language that is widely used in computational science and computational mathematics.&lt;/p&gt;
&lt;p&gt;In this sense, C/C++ and Python can be considered as scientific programming languages. In a stricter sense, a scientific programming language is a language that is designed and optimized to use mathematical formulas and matrices. Such languages are characterized not only by the presence of libraries that perform mathematical or scientific functions, but also by the syntax of the language itself. For example, neither C++ nor Python have built-in matrix types or functions for matrix arithmetic (addition, multiplication, etc.); instead, this function is available through standard libraries. Scientific programming languages in a strong sense include ALGOL , APL, Fortran, J , Julia, Maple, MATLAB , and R.&lt;/p&gt;
&lt;p&gt;Scientific programming languages should not be confused with scientific language in general, which loosely refers to the higher standards of accuracy, correctness, and brevity expected of practitioners of the scientific method.&lt;/p&gt;
&lt;p&gt;Examples Linear Algebra Scientific programming languages provide opportunities for working with linear algebra. For example, the following Julia program solves a system of linear equations :&lt;/p&gt;
&lt;p&gt;A = rand(20, 20) # A is a 20x20 matrix&lt;/p&gt;
&lt;p&gt;b = rand(20) # b is a 20-element vector&lt;/p&gt;
&lt;p&gt;x = A\b # x is the solution to A*x = b&lt;/p&gt;
&lt;p&gt;Working with large vectors and matrices is a key feature of these languages, as linear algebra lays the foundation for mathematical optimization, which, in turn, allows for basic applications such as deep learning.&lt;/p&gt;
&lt;p&gt;Mathematical optimization In a scientific programming language, we can calculate the optimum of a function with a syntax close to the mathematical language. For example, the following Julia code finds the minimum of a polynomial.&lt;/p&gt;
&lt;p&gt;using Optim&lt;/p&gt;
&lt;p&gt;P(x,y) = x2 - 3x*y + 5y2 - 7y + 3&lt;/p&gt;
&lt;p&gt;z₀ = [ 0.0&lt;/p&gt;
&lt;p&gt;0.0 ] # starting point for optimization algorithm o&lt;/p&gt;
&lt;p&gt;ptimize(z -&amp;gt; P(z…), z₀, Newton();&lt;/p&gt;
&lt;p&gt;autodiff = :forward)&lt;/p&gt;
&lt;p&gt;This example uses Newton&amp;rsquo;s minimization method. Modern scientific programming languages will use automatic differentiation to calculate gradients and hessians of a function given as input; cf. differentiable programming. Here, automatic direct differentiation is selected for this task. Old scientific programming languages, such as the venerable Fortran, would require the programmer to pass next to the function to be optimized, a function that calculates the gradient, and a function that calculates the hessian.&lt;/p&gt;
&lt;p&gt;The more knowledge you have about the function that needs to be minimized, the more efficient algorithms you can use. For example, convex optimization provides faster computations when the function is convex, quadratic programming provides faster computations when the function is at most quadratic in its variables, and linear programming when the function is maximally linear.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lightweight markup languages</title>
      <link>http://localhost:1313/post/2post/</link>
      <pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2post/</guid>
      <description>&lt;p&gt;A lightweight markup language is a markup language designed to have a minimal syntax and to be easier for humans to read than traditional markup languages. Some, like asciidoc and the language of this very wiki, have comparatively many features, while others, e.g., that of the Thunderbird email client, which interprets email messages following a convention, are more rudimentary.&lt;/p&gt;
&lt;p&gt;What is the use of a lightweight markup language&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;As software document format
Many other development community, like python, already uses a lightweight markup language for software documents. Typical uses are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;for developers to author help files&lt;/li&gt;
&lt;li&gt;to use in comment in source code to be later extracted to form code reference document.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In former case, there should be a widget to display the markup. In latter case, the document should be able to be translated to HTML.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A WYSIWYG editor widget&amp;rsquo;s content format
A WYSIWYG editor can save its content in a lightweight markup language. In this case lightweight markup language is transparent to the users. This case is seen as GUI bbcode editor that is sometimes used on the web, but no implementation in tcl yet have been seen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Directly usable to the end users
This case is frequently seen on online forums, like BBcode, and in wiki, like in tclerswiki. End user is supposed to learn and compose using this wiki language.&lt;/p&gt;
&lt;p&gt;Which lightweight markup languages have tcl tools supporting them?
So far, most TCL lightweight markup language tools either require users define their own markup language, like the library included in tkoutline, or uses a markup language defined by the tool author, like &amp;ldquo;put-text&amp;rdquo; used in tkcvs, which defined a few tags including &amp;ldquo;&lt;h1&gt;&amp;rdquo;, &amp;ldquo;&lt;cmp&gt;&amp;rdquo; and so forth. There isn&amp;rsquo;t a tool that uses a well-recognized lightweight markup language, like asciidoc or Textile .&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A well-recognized lightweight markup language usually has many tools designed to process it, thus it is easier to compose a document in the language and re-use it, e.g. in both &amp;ldquo;Help&amp;rdquo; menu and in Unix man page. Thanks to a lack of such tools in tcl, at the moment, documents already written in a well-recognized markup language cannot be displayed in tcl widgets directly.&lt;/p&gt;
&lt;p&gt;What features are there in lightweight markup language tools?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Can represent / recognize bold and italic. This is a basic feature of markup language, thus not mentioned in feature table. Every tool supports this.&lt;/li&gt;
&lt;li&gt;Display in rich text format as in htext&lt;/li&gt;
&lt;li&gt;Translate to HTML, as in tclerswiki&lt;/li&gt;
&lt;li&gt;WYSIWYG editing, not seen in any tcl markup language tool&lt;/li&gt;
&lt;li&gt;Support of Images (I), Links (L), Tables (T) and Headings (H)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;List of Languages&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;asciidoc&lt;/li&gt;
&lt;li&gt;Creole , an attempt to create a common wiki markup&lt;/li&gt;
&lt;li&gt;htext&lt;/li&gt;
&lt;li&gt;kiwi&lt;/li&gt;
&lt;li&gt;Markdown
-   MultiMarkdown (MMD): a superset of Markdown&lt;/li&gt;
&lt;li&gt;Textile&lt;/li&gt;
&lt;li&gt;tkoutline&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>My second blog</title>
      <link>http://localhost:1313/post/2blog/</link>
      <pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2blog/</guid>
      <description>&lt;p&gt;During the last week, I completed lab No.6 and 7 and, also, checked the lab work of other students.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git version control</title>
      <link>http://localhost:1313/post/1post/</link>
      <pubDate>Fri, 21 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/1post/</guid>
      <description>&lt;p&gt;A version control system, or VCS, tracks the history of changes as people and teams collaborate on projects together. As developers make changes to the project, any earlier version of the project can be recovered at any time.&lt;/p&gt;
&lt;p&gt;Developers can review project history to find out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Which changes were made?&lt;/li&gt;
&lt;li&gt;Who made the changes?&lt;/li&gt;
&lt;li&gt;When were the changes made?&lt;/li&gt;
&lt;li&gt;Why were changes needed?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VCSs give each contributor a unified and consistent view of a project, surfacing work that&amp;rsquo;s already in progress. Seeing a transparent history of changes, who made them, and how they contribute to the development of a project helps team members stay aligned while working independently.&lt;/p&gt;
&lt;p&gt;In a distributed version control system, every developer has a full copy of the project and project history. Unlike once popular centralized version control systems, DVCSs don&amp;rsquo;t need a constant connection to a central repository. Git is the most popular distributed version control system. Git is commonly used for both open source and commercial software development, with significant benefits for individuals, teams and businesses.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Git lets developers see the entire timeline of their changes, decisions, and progression of any project in one place. From the moment they access the history of a project, the developer has all the context they need to understand it and start contributing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developers work in every time zone. With a DVCS like Git, collaboration can happen any time while maintaining source code integrity. Using branches, developers can safely propose changes to production code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Businesses using Git can break down communication barriers between teams and keep them focused on doing their best work. Plus, Git makes it possible to align experts across a business to collaborate on major projects.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>My first blog</title>
      <link>http://localhost:1313/post/1blog/</link>
      <pubDate>Fri, 21 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/1blog/</guid>
      <description>&lt;p&gt;During the last week, I completed lab No.5 and checked the lab work of other students.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
