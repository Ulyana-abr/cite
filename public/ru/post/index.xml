<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog | Hugo Academic CV Theme</title>
    <link>http://localhost:1313/ru/post/</link>
      <atom:link href="http://localhost:1313/ru/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Blog</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>ru</language><lastBuildDate>Fri, 30 May 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu_645fa481986063ef.png</url>
      <title>Blog</title>
      <link>http://localhost:1313/ru/post/</link>
    </image>
    
    <item>
      <title>5 blog</title>
      <link>http://localhost:1313/ru/post/5blog/</link>
      <pubDate>Fri, 30 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ru/post/5blog/</guid>
      <description>&lt;p&gt;В течение прошлой недели, я выполнила лабораторную работу  №14 и сделала 6 этап индивидуального проекта.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Моя четвертая запись</title>
      <link>http://localhost:1313/ru/post/4blog/</link>
      <pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ru/post/4blog/</guid>
      <description>&lt;p&gt;В течение прошлой недели, я закончила лабораторную работу №13 и проверила работы других студентов&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Языки научного программирования</title>
      <link>http://localhost:1313/ru/post/4post/</link>
      <pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ru/post/4post/</guid>
      <description>&lt;p&gt;В компьютерном программировании , научный язык программирования может относиться к двум степеням той же концепции.&lt;/p&gt;
&lt;p&gt;В широком смысле научный язык программирования - это язык программирования, который широко используется в вычислительной науке и вычислительной математике .&lt;/p&gt;
&lt;p&gt;В этом смысле C / C ++ и Python можно рассматривать как языки научного программирования. В более строгом смысле научный язык программирования - это язык, который разработан и оптимизирован для использования математических формул и матриц . Такие языки характеризуются не только наличием библиотек, выполняющих математические или научные функции, но и синтаксисом самого языка. Например, ни C ++, ни Python не имеют встроенных типов матриц или функций для матричной арифметики (сложение, умножение и т. Д.); вместо этого эта функция доступна через стандартные библиотеки. Научные языки программирования в сильном смысле включают ALGOL , APL , Fortran , J , Юлю , Maple , MATLAB и R .&lt;/p&gt;
&lt;p&gt;Языки научного программирования не следует путать с научным языком в целом, который свободно относится к более высоким стандартам точности, правильности и краткости, ожидаемым от практикующих научный метод .&lt;/p&gt;
&lt;p&gt;Примеры
Линейная алгебра
Языки научного программирования предоставляют возможности для работы с линейной алгеброй . Например, следующая программа Julia решает систему линейных уравнений :&lt;/p&gt;
&lt;p&gt;A = rand(20, 20) # A is a 20x20 matrix&lt;/p&gt;
&lt;p&gt;b = rand(20) # b is a 20-element vector&lt;/p&gt;
&lt;p&gt;x = A\b # x is the solution to A*x = b&lt;/p&gt;
&lt;p&gt;Работа с большими векторами и матрицами - ключевая особенность этих языков, поскольку линейная алгебра закладывает основу математической оптимизации , которая, в свою очередь, позволяет использовать основные приложения, такие как глубокое обучение .&lt;/p&gt;
&lt;p&gt;Математическая оптимизация
В научном языке программирования мы можем вычислять оптимум функции с синтаксисом, близким к математическому языку. Например, следующий код Джулии находит минимум полинома .&lt;/p&gt;
&lt;p&gt;using Optim&lt;/p&gt;
&lt;p&gt;P(x,y) = x&lt;sup&gt;2 - 3x*y + 5y&lt;/sup&gt;2 - 7y + 3&lt;/p&gt;
&lt;p&gt;z₀ = [ 0.0&lt;/p&gt;
&lt;p&gt;0.0 ] # starting point for optimization algorithm o&lt;/p&gt;
&lt;p&gt;ptimize(z -&amp;gt; P(z…), z₀, Newton();&lt;/p&gt;
&lt;p&gt;autodiff = :forward)&lt;/p&gt;
&lt;p&gt;В этом примере используется метод минимизации Ньютона . Современные языки научного программирования будут использовать автоматическое дифференцирование для вычисления градиентов и гессианов функции, заданной в качестве входных данных; ср. дифференцируемое программирование . Здесь для этой задачи выбрана автоматическая прямая дифференциация. Старые языки научного программирования, такие как почтенный Фортран, потребовали бы от программиста передать рядом с функцией, которая должна быть оптимизирована, функцию, которая вычисляет градиент, и функцию, которая вычисляет гессиан.&lt;/p&gt;
&lt;p&gt;Чем больше знаний о функции, которую необходимо минимизировать, тем больше можно использовать более эффективные алгоритмы. Например, выпуклая оптимизация обеспечивает более быстрые вычисления, когда функция является выпуклой, квадратичное программирование обеспечивает более быстрые вычисления, когда функция не более чем квадратична по своим переменным, и линейное программирование, когда функция максимально линейна.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Моя третья запись</title>
      <link>http://localhost:1313/ru/post/3blog/</link>
      <pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ru/post/3blog/</guid>
      <description>&lt;p&gt;В течение прошлой недели, я закончила лабораторную работу №11, выполнила 4 этап индивидуального проекта, а также проверила работы других студентов&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Оформление отчёта</title>
      <link>http://localhost:1313/ru/post/3post/</link>
      <pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ru/post/3post/</guid>
      <description>&lt;p&gt;Лабораторная работа является небольшой научно-исследовательской работой, которую и оформлять следует по всем утверждённым требованиям. При подготовке отчета по лабораторной работе вы освоите ряд важных элементов, которые в дальнейшем пригодятся вам при написании курсовой и дипломной работы.&lt;/p&gt;
&lt;p&gt;Структура отчёта
Согласно ГОСТ 7.32-2001, любая научно-исследовательская работа должна обязательно содержать следующие элементы:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;титульный лист&lt;/li&gt;
&lt;li&gt;реферат&lt;/li&gt;
&lt;li&gt;введение&lt;/li&gt;
&lt;li&gt;основную часть&lt;/li&gt;
&lt;li&gt;заключение&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Также ГОСТ рекомендует включить в работу и такие элементы:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;список исполнителей&lt;/li&gt;
&lt;li&gt;содержание&lt;/li&gt;
&lt;li&gt;нормативные ссылки&lt;/li&gt;
&lt;li&gt;определения&lt;/li&gt;
&lt;li&gt;обозначения и сокращения&lt;/li&gt;
&lt;li&gt;список использованных источников&lt;/li&gt;
&lt;li&gt;приложения&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Если вы проводите сложную работу, выполняемую в несколько этапов, то вам может понадобиться включить в работу часть или все элементы второго списка.&lt;/p&gt;
&lt;p&gt;Содержание основных элементов отчета:&lt;/p&gt;
&lt;p&gt;Титульный лист.
Первый лист работы оформляется строго по образцу, который обычно приводится в методических пособиях по вашему предмету. В нем не просто требуется указать такие элементы, как название образовательного учреждения, вид работы и сведения об исполнителе, но и расположить их в строгом соответствии со стандартами.&lt;/p&gt;
&lt;p&gt;Реферат.
Реферат фактически является кратким представлением всего вашего отчета и содержит ряд статистических сведений. В нем нужно указать количество частей, страниц работы, иллюстраций, приложений, таблиц, использованных литературных источников и приложений. Здесь же приводится перечень ключевых слов работы и собственно текст реферата. Последний подразумевает основные элементы работы от поставленных целей до результатов и рекомендаций по их внедрению. В практике вузов в отчеты по лабораторным работам реферат обычно не включают.&lt;/p&gt;
&lt;p&gt;Введение.
Во введении типовой лабораторной работы обычно прописывают цели проводимого исследования и задачи, выполнение которых поможет достичь поставленных целей. В то же время существуют работы, в которых студенты становятся настоящими первооткрывателями. Приходилось ли вам хотя бы однажды испытывать чувство крайнего любопытства и нетерпения при проведении лабораторной работы? Ощущать, что буквально через пару минут вы найдете ответ на вопрос, на который еще никто и никогда не находил ответа? Именно для таких исследований пишется развернутое введение с доказательством актуальности и новизны изучаемой темы. Чтобы действительно провести исследование в той области, в которой, как говорится, еще неступала нога человека, во введении вам понадобится привести оценку современного состояния рассматриваемой проблемы и обосновать необходимость ее решения.&lt;/p&gt;
&lt;p&gt;Основная часть.
Так как в разных вузах и в разных дисциплинах существуют свои тонкости проведения лабораторных работ, содержание основной части подробно описывают в соответствующих методичках. Важно, чтобы в этом разделе работы была отражена ее суть, описана методика и результаты проделанной работы.&lt;/p&gt;
&lt;p&gt;В основной части прописывают следующие элементы:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;цели проводимого исследования;&lt;/li&gt;
&lt;li&gt;задачи, выполнение которых поможет достичь поставленных целей;&lt;/li&gt;
&lt;li&gt;ход работы, в котором описываются выполненные действия;&lt;/li&gt;
&lt;li&gt;прочие разделы, предусмотренные методическими материалами по изучаемой дисциплине.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Заключение.
В этой части работы вам потребуется сделать выводы по полученным в ходе лабораторной работы результатам. Для этого оцените, насколько полно выполнены поставленные задачи. В сложных работах могут присутствовать и другие элементы, например, рекомендации для дальнейшего применения результатов проведённой работы.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Моя вторая запись</title>
      <link>http://localhost:1313/ru/post/2blog/</link>
      <pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ru/post/2blog/</guid>
      <description>&lt;p&gt;В течение прошлой недели, я закончила лабораторную работу № 6,7 и проверила работы других студентов&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Облегченные языки разметки</title>
      <link>http://localhost:1313/ru/post/2post/</link>
      <pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ru/post/2post/</guid>
      <description>&lt;p&gt;Облегченный язык разметки - это язык разметки, разработанный таким образом, чтобы иметь минимальный синтаксис и быть более удобным для чтения человеком, чем традиционные языки разметки. Некоторые из них, такие как asciidoc и язык этой самой вики, обладают сравнительно большим количеством функций, в то время как другие, например, почтовый клиент Thunderbird, который интерпретирует сообщения электронной почты в соответствии с соглашением, более примитивны.&lt;/p&gt;
&lt;p&gt;В чем польза облегченного языка разметки&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;В качестве формата программного документа многие другие сообщества разработчиков, такие как python, уже используют облегченный язык разметки для программных документов. Обычно
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;разработчики используют его для создания файлов справки
для использования в комментариях к исходному коду, которые впоследствии извлекаются для формирования справочного документа по коду.&lt;/p&gt;
&lt;p&gt;В первом случае должен быть виджет для отображения разметки. Во втором случае документ должен быть переведен в HTML.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Формат содержимого виджета WYSIWYG editor Редактор WYSIWYG может сохранять содержимое на упрощенном языке разметки. В этом случае упрощенный язык разметки является прозрачным для пользователей. Этот вариант рассматривается как редактор bbcode с графическим интерфейсом, который иногда используется в Интернете, но пока не был реализован в tcl.

Непосредственно доступный конечным пользователям, этот вариант часто встречается на онлайн-форумах, таких как BBCode, и в wiki, например, в tclerswiki. Предполагается, что конечный пользователь будет изучать и составлять тексты, используя этот вики-язык.

Какие облегченные языки разметки поддерживают инструменты tcl? До сих пор большинство инструментов облегченного языка разметки TCL либо требовали, чтобы пользователи определяли свой собственный язык разметки, как библиотека, включенная в tkoutline, либо использовали язык разметки, определенный автором инструмента, например “put-text”, используемый в tkcvs, который определяет несколько тегов, включая “
”, ”&amp;quot; и так далее. Не существует инструмента, который использовал бы хорошо узнаваемый облегченный язык разметки, такой как asciidoc или Textile .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Хорошо узнаваемый облегченный язык разметки обычно имеет множество инструментов, предназначенных для его обработки, поэтому проще создать документ на этом языке и повторно использовать его, например, как в меню “Справка”, так и на странице руководства Unix. Из-за отсутствия таких инструментов в tcl, на данный момент документы, уже написанные на хорошо распознаваемом языке разметки, не могут отображаться непосредственно в виджетах tcl.&lt;/p&gt;
&lt;p&gt;Какие функции есть в облегченных инструментах языка разметки?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Может отображать / распознавать жирный шрифт и курсив. Это базовая функция языка разметки, поэтому она не упоминается в таблице функций. Все инструменты поддерживают ее.
Отображение в расширенном текстовом формате, как в httext
Перевод в HTML, как в tclerswiki
Редактирование в формате WYSIWYG, которого нет ни в одном инструменте языка разметки tcl
Поддержка изображений (I), ссылок (L), таблиц (T) и заголовков (H)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Список языков&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;asciidoc
Креольский, попытка создать общую вики-разметку
htext
киви
Markdown - Мультимаркетинг (MMD): надмножество Markdown
Текстильный
линия tkoutline
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Моя первая запись</title>
      <link>http://localhost:1313/ru/post/1blog/</link>
      <pubDate>Fri, 21 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ru/post/1blog/</guid>
      <description>&lt;p&gt;В течение прошлой недели, я закончила лабораторную работу №5 и проверила работы других студентов&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Система контроля версий Git</title>
      <link>http://localhost:1313/ru/post/1post/</link>
      <pubDate>Fri, 21 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/ru/post/1post/</guid>
      <description>&lt;p&gt;Система контроля версий, или VCS, отслеживает историю изменений, когда люди и команды совместно работают над проектами. Поскольку разработчики вносят изменения в проект, любая более ранняя версия проекта может быть восстановлена в любое время.&lt;/p&gt;
&lt;p&gt;Разработчики могут просмотреть историю проекта, чтобы узнать,:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Какие изменения были внесены?
Кто внес изменения?
Когда были внесены изменения?
Зачем были необходимы изменения?
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;VCSS предоставляет каждому участнику единое и последовательное представление о проекте, отображая уже выполненную работу. Просмотр прозрачной истории изменений, информации о том, кто их внес, и о том, как они влияют на развитие проекта, помогает членам команды оставаться согласованными во время самостоятельной работы.&lt;/p&gt;
&lt;p&gt;В распределенной системе контроля версий у каждого разработчика есть полная копия проекта и его истории. В отличие от некогда популярных централизованных систем контроля версий, DVCSS не нуждаются в постоянном подключении к центральному репозиторию. Git - самая популярная распределенная система контроля версий. Git широко используется как для разработки программного обеспечения с открытым исходным кодом, так и для разработки коммерческого программного обеспечения, что дает значительные преимущества отдельным лицам, командам и предприятиям.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Git позволяет разработчикам видеть всю хронологию своих изменений, решений и хода реализации любого проекта в одном месте. С того момента, как они получают доступ к истории проекта, у разработчика есть весь необходимый контекст, чтобы понять его и начать вносить свой вклад.

Разработчики работают в любом часовом поясе. С помощью DVCS, такого как Git, совместная работа может осуществляться в любое время, сохраняя целостность исходного кода. Используя ветки, разработчики могут безопасно предлагать изменения в рабочий код.

Компании, использующие Git, могут устранить коммуникационные барьеры между командами и сосредоточить их на выполнении своей работы наилучшим образом. Кроме того, Git позволяет объединять экспертов по всему бизнесу для совместной работы над крупными проектами.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
